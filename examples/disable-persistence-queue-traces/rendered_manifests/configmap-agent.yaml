---
# Source: splunk-otel-collector/templates/configmap-agent.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: default-splunk-otel-collector-otel-agent
  namespace: default
  labels:
    app.kubernetes.io/name: splunk-otel-collector
    helm.sh/chart: splunk-otel-collector-0.105.5
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: default
    app.kubernetes.io/version: "0.105.0"
    app: splunk-otel-collector
    chart: splunk-otel-collector-0.105.5
    release: default
    heritage: Helm
data:
  relay: |
    exporters:
      splunk_hec/platform_logs:
        disable_compression: true
        endpoint: CHANGEME
        idle_conn_timeout: 10s
        index: CHANGEME
        max_idle_conns: 200
        max_idle_conns_per_host: 200
        profiling_data_enabled: false
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_elapsed_time: 300s
          max_interval: 30s
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 1000
          storage: file_storage/persistent_queue
        source: kubernetes
        splunk_app_name: splunk-otel-collector
        splunk_app_version: 0.105.5
        timeout: 10s
        tls:
          insecure_skip_verify: false
        token: ${SPLUNK_PLATFORM_HEC_TOKEN}
      splunk_hec/platform_metrics:
        disable_compression: true
        endpoint: CHANGEME
        idle_conn_timeout: 10s
        index: CHANGEME
        max_idle_conns: 200
        max_idle_conns_per_host: 200
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_elapsed_time: 300s
          max_interval: 30s
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 1000
          storage: file_storage/persistent_queue
        source: kubernetes
        splunk_app_name: splunk-otel-collector
        splunk_app_version: 0.105.5
        timeout: 10s
        tls:
          insecure_skip_verify: false
        token: ${SPLUNK_PLATFORM_HEC_TOKEN}
      splunk_hec/platform_traces:
        disable_compression: true
        endpoint: CHANGEME
        idle_conn_timeout: 10s
        index: ""
        max_idle_conns: 200
        max_idle_conns_per_host: 200
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_elapsed_time: 300s
          max_interval: 30s
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 1000
          storage: null
        source: kubernetes
        splunk_app_name: splunk-otel-collector
        splunk_app_version: 0.105.5
        timeout: 10s
        tls:
          insecure_skip_verify: false
        token: ${SPLUNK_PLATFORM_HEC_TOKEN}
    extensions:
      file_storage:
        directory: /var/addon/splunk/otel_pos
      file_storage/persistent_queue:
        directory: /var/addon/splunk/exporter_queue/agent
        timeout: 0
      health_check:
        endpoint: 0.0.0.0:13133
      k8s_observer:
        auth_type: serviceAccount
        node: ${K8S_NODE_NAME}
      zpages: null
    processors:
      batch: null
      filter/logs:
        logs:
          exclude:
            match_type: strict
            resource_attributes:
            - key: splunk.com/exclude
              value: "true"
      k8sattributes:
        extract:
          annotations:
          - from: pod
            key: splunk.com/sourcetype
          - from: namespace
            key: splunk.com/exclude
            tag_name: splunk.com/exclude
          - from: pod
            key: splunk.com/exclude
            tag_name: splunk.com/exclude
          - from: namespace
            key: splunk.com/index
            tag_name: com.splunk.index
          - from: pod
            key: splunk.com/index
            tag_name: com.splunk.index
          labels:
          - key: app
          metadata:
          - k8s.namespace.name
          - k8s.node.name
          - k8s.pod.name
          - k8s.pod.uid
          - container.id
          - container.image.name
          - container.image.tag
        filter:
          node_from_env_var: K8S_NODE_NAME
        pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.uid
        - sources:
          - from: resource_attribute
            name: k8s.pod.ip
        - sources:
          - from: resource_attribute
            name: ip
        - sources:
          - from: connection
        - sources:
          - from: resource_attribute
            name: host.name
      k8sattributes/metrics:
        extract:
          annotations:
          - from: pod
            key: splunk.com/sourcetype
          - from: namespace
            key: splunk.com/metricsIndex
            tag_name: com.splunk.index
          - from: pod
            key: splunk.com/metricsIndex
            tag_name: com.splunk.index
          metadata: []
        filter:
          node_from_env_var: K8S_NODE_NAME
        pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.node.name
        - sources:
          - from: resource_attribute
            name: k8s.pod.uid
        - sources:
          - from: resource_attribute
            name: k8s.pod.ip
        - sources:
          - from: resource_attribute
            name: ip
        - sources:
          - from: connection
      memory_limiter:
        check_interval: 2s
        limit_mib: ${SPLUNK_MEMORY_LIMIT_MIB}
      resource:
        attributes:
        - action: insert
          key: k8s.node.name
          value: ${K8S_NODE_NAME}
        - action: upsert
          key: k8s.cluster.name
          value: CHANGEME
      resource/add_agent_k8s:
        attributes:
        - action: insert
          key: k8s.pod.name
          value: ${K8S_POD_NAME}
        - action: insert
          key: k8s.pod.uid
          value: ${K8S_POD_UID}
        - action: insert
          key: k8s.namespace.name
          value: ${K8S_NAMESPACE}
      resource/logs:
        attributes:
        - action: upsert
          from_attribute: k8s.pod.annotations.splunk.com/sourcetype
          key: com.splunk.sourcetype
        - action: delete
          key: k8s.pod.annotations.splunk.com/sourcetype
        - action: delete
          key: splunk.com/exclude
      resourcedetection:
        detectors:
        - env
        - system
        override: true
        timeout: 15s
    receivers:
      filelog:
        encoding: utf-8
        exclude:
        - /var/log/pods/default_default-splunk-otel-collector*_*/otel-collector/*.log
        fingerprint_size: 1kb
        force_flush_period: "0"
        include:
        - /var/log/pods/*/*/*.log
        include_file_name: false
        include_file_path: true
        max_concurrent_files: 1024
        max_log_size: 1MiB
        operators:
        - id: get-format
          routes:
          - expr: body matches "^\\{"
            output: parser-docker
          - expr: body matches "^[^ Z]+ "
            output: parser-crio
          - expr: body matches "^[^ ]+ "
            output: parser-containerd
          type: router
        - id: parser-crio
          regex: ^(?P<time>[^ Z]+) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$
          timestamp:
            layout: 2006-01-02T15:04:05.999999999Z07:00
            layout_type: gotime
            parse_from: attributes.time
          type: regex_parser
        - combine_field: attributes.log
          combine_with: ""
          id: crio-recombine
          is_last_entry: attributes.logtag == 'F'
          max_log_size: 1048576
          output: handle_empty_log
          source_identifier: attributes["log.file.path"]
          type: recombine
        - id: parser-containerd
          regex: ^(?P<time>[^ ]+) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$
          timestamp:
            layout: 2006-01-02T15:04:05.999999999Z07:00
            layout_type: gotime
            parse_from: attributes.time
          type: regex_parser
        - combine_field: attributes.log
          combine_with: ""
          id: containerd-recombine
          is_last_entry: attributes.logtag == 'F'
          max_log_size: 1048576
          output: handle_empty_log
          source_identifier: attributes["log.file.path"]
          type: recombine
        - id: parser-docker
          timestamp:
            layout: '%Y-%m-%dT%H:%M:%S.%LZ'
            parse_from: attributes.time
          type: json_parser
        - combine_field: attributes.log
          combine_with: ""
          id: docker-recombine
          is_last_entry: attributes.log endsWith "\n"
          max_log_size: 1048576
          output: handle_empty_log
          source_identifier: attributes["log.file.path"]
          type: recombine
        - field: attributes.log
          id: handle_empty_log
          if: attributes.log == nil
          type: add
          value: ""
        - parse_from: attributes["log.file.path"]
          regex: ^\/var\/log\/pods\/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[^\/]+)\/(?P<container_name>[^\._]+)\/(?P<restart_count>\d+)\.log$
          type: regex_parser
        - from: attributes.uid
          to: resource["k8s.pod.uid"]
          type: move
        - from: attributes.restart_count
          to: resource["k8s.container.restart_count"]
          type: move
        - from: attributes.container_name
          to: resource["k8s.container.name"]
          type: move
        - from: attributes.namespace
          to: resource["k8s.namespace.name"]
          type: move
        - from: attributes.pod_name
          to: resource["k8s.pod.name"]
          type: move
        - field: resource["com.splunk.sourcetype"]
          type: add
          value: EXPR("kube:container:"+resource["k8s.container.name"])
        - from: attributes.stream
          to: attributes["log.iostream"]
          type: move
        - from: attributes["log.file.path"]
          to: resource["com.splunk.source"]
          type: move
        - from: attributes.log
          id: clean-up-log-record
          to: body
          type: move
        - field: attributes.time
          type: remove
        poll_interval: 200ms
        retry_on_failure:
          enabled: true
        start_at: beginning
        storage: file_storage
      fluentforward:
        endpoint: 0.0.0.0:8006
      hostmetrics:
        collection_interval: 10s
        scrapers:
          cpu: null
          disk: null
          filesystem: null
          load: null
          memory: null
          network: null
          paging: null
          processes: null
      jaeger:
        protocols:
          grpc:
            endpoint: 0.0.0.0:14250
          thrift_http:
            endpoint: 0.0.0.0:14268
      kubeletstats:
        auth_type: serviceAccount
        collection_interval: 10s
        endpoint: ${K8S_NODE_IP}:10250
        extra_metadata_labels:
        - container.id
        metric_groups:
        - container
        - pod
        - node
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus/agent:
        config:
          scrape_configs:
          - job_name: otel-agent
            metric_relabel_configs:
            - action: drop
              regex: otelcol_rpc_.*
              source_labels:
              - __name__
            - action: drop
              regex: otelcol_http_.*
              source_labels:
              - __name__
            - action: drop
              regex: otelcol_processor_batch_.*
              source_labels:
              - __name__
            scrape_interval: 10s
            static_configs:
            - targets:
              - ${K8S_POD_IP}:8889
      receiver_creator:
        receivers:
          smartagent/coredns:
            config:
              extraDimensions:
                metric_source: k8s-coredns
              port: 9153
              type: coredns
            rule: type == "pod" && labels["k8s-app"] == "kube-dns"
          smartagent/kube-controller-manager:
            config:
              extraDimensions:
                metric_source: kubernetes-controller-manager
              port: 10257
              skipVerify: true
              type: kube-controller-manager
              useHTTPS: true
              useServiceAccount: true
            rule: type == "pod" && labels["k8s-app"] == "kube-controller-manager"
          smartagent/kubernetes-apiserver:
            config:
              extraDimensions:
                metric_source: kubernetes-apiserver
              skipVerify: true
              type: kubernetes-apiserver
              useHTTPS: true
              useServiceAccount: true
            rule: type == "port" && port == 443 && pod.labels["k8s-app"] == "kube-apiserver"
          smartagent/kubernetes-proxy:
            config:
              extraDimensions:
                metric_source: kubernetes-proxy
              port: 10249
              scrapeFailureLogLevel: debug
              type: kubernetes-proxy
            rule: type == "pod" && labels["k8s-app"] == "kube-proxy"
          smartagent/kubernetes-scheduler:
            config:
              extraDimensions:
                metric_source: kubernetes-scheduler
              port: 10259
              skipVerify: true
              type: kubernetes-scheduler
              useHTTPS: true
              useServiceAccount: true
            rule: type == "pod" && labels["k8s-app"] == "kube-scheduler"
        watch_observers:
        - k8s_observer
      signalfx:
        endpoint: 0.0.0.0:9943
      zipkin:
        endpoint: 0.0.0.0:9411
    service:
      extensions:
      - file_storage
      - file_storage/persistent_queue
      - health_check
      - k8s_observer
      - zpages
      pipelines:
        logs:
          exporters:
          - splunk_hec/platform_logs
          processors:
          - memory_limiter
          - k8sattributes
          - filter/logs
          - batch
          - resourcedetection
          - resource
          - resource/logs
          receivers:
          - filelog
          - fluentforward
          - otlp
        metrics:
          exporters:
          - splunk_hec/platform_metrics
          processors:
          - memory_limiter
          - batch
          - resourcedetection
          - resource
          - k8sattributes/metrics
          receivers:
          - hostmetrics
          - kubeletstats
          - otlp
          - receiver_creator
          - signalfx
        metrics/agent:
          exporters:
          - splunk_hec/platform_metrics
          processors:
          - memory_limiter
          - batch
          - resource/add_agent_k8s
          - resourcedetection
          - resource
          - k8sattributes/metrics
          receivers:
          - prometheus/agent
        traces:
          exporters:
          - splunk_hec/platform_traces
          processors:
          - memory_limiter
          - k8sattributes
          - batch
          - resourcedetection
          - resource
          receivers:
          - otlp
          - jaeger
          - zipkin
      telemetry:
        metrics:
          address: 0.0.0.0:8889
