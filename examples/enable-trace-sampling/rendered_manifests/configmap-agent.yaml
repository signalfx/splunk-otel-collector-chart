---
# Source: splunk-otel-collector/templates/configmap-agent.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: default-splunk-otel-collector-otel-agent
  namespace: default
  labels:
    app.kubernetes.io/name: splunk-otel-collector
    helm.sh/chart: splunk-otel-collector-0.131.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: default
    app.kubernetes.io/version: "0.131.0"
    app: splunk-otel-collector
    chart: splunk-otel-collector-0.131.0
    release: default
    heritage: Helm
data:
  relay: |
    exporters:
      otlp:
        auth:
          authenticator: headers_setter
        endpoint: default-splunk-otel-collector:4317
        tls:
          insecure: true
      otlphttp/entities:
        auth:
          authenticator: headers_setter
        endpoint: http://default-splunk-otel-collector:4318
      signalfx:
        access_token: ${SPLUNK_OBSERVABILITY_ACCESS_TOKEN}
        api_url: http://default-splunk-otel-collector:6060
        correlation: null
        ingest_url: http://default-splunk-otel-collector:9943
        root_path: /hostfs
        sync_host_metadata: true
      signalfx/histograms:
        access_token: ${SPLUNK_OBSERVABILITY_ACCESS_TOKEN}
        api_url: https://api.CHANGEME.signalfx.com
        ingest_url: https://ingest.CHANGEME.signalfx.com
        send_otlp_histograms: true
    extensions:
      headers_setter:
        headers:
        - action: upsert
          default_value: ${SPLUNK_OBSERVABILITY_ACCESS_TOKEN}
          from_context: X-SF-TOKEN
          key: X-SF-TOKEN
      health_check:
        endpoint: 0.0.0.0:13133
      k8s_observer:
        auth_type: serviceAccount
        node: ${K8S_NODE_NAME}
      zpages: null
    processors:
      batch:
        metadata_keys:
        - X-SF-Token
      k8sattributes:
        extract:
          annotations:
          - from: pod
            key: splunk.com/sourcetype
          - from: namespace
            key: splunk.com/exclude
            tag_name: splunk.com/exclude
          - from: pod
            key: splunk.com/exclude
            tag_name: splunk.com/exclude
          - from: namespace
            key: splunk.com/index
            tag_name: com.splunk.index
          - from: pod
            key: splunk.com/index
            tag_name: com.splunk.index
          labels:
          - key: app
          metadata:
          - k8s.namespace.name
          - k8s.node.name
          - k8s.pod.name
          - k8s.pod.uid
          - container.id
          - container.image.name
          - container.image.tag
        filter:
          node_from_env_var: K8S_NODE_NAME
        passthrough: true
        pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.uid
        - sources:
          - from: resource_attribute
            name: k8s.pod.ip
        - sources:
          - from: resource_attribute
            name: ip
        - sources:
          - from: connection
        - sources:
          - from: resource_attribute
            name: host.name
      memory_limiter:
        check_interval: 2s
        limit_mib: ${SPLUNK_MEMORY_LIMIT_MIB}
      probabilistic_sampler:
        hash_seed: 22
        sampling_percentage: 15.3
      resource:
        attributes:
        - action: insert
          key: k8s.node.name
          value: ${K8S_NODE_NAME}
        - action: upsert
          key: k8s.cluster.name
          value: CHANGEME
      resource/add_agent_k8s:
        attributes:
        - action: insert
          key: k8s.pod.name
          value: ${K8S_POD_NAME}
        - action: insert
          key: k8s.pod.uid
          value: ${K8S_POD_UID}
        - action: insert
          key: k8s.namespace.name
          value: ${K8S_NAMESPACE}
      resource/add_mode:
        attributes:
        - action: insert
          key: otelcol.service.mode
          value: agent
      resourcedetection:
        detectors:
        - env
        - system
        override: true
        timeout: 15s
    receivers:
      jaeger:
        protocols:
          grpc:
            endpoint: 0.0.0.0:14250
          thrift_http:
            endpoint: 0.0.0.0:14268
      nop: null
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus/agent:
        config:
          scrape_configs:
          - job_name: otel-agent
            metric_relabel_configs:
            - action: drop
              regex: promhttp_metric_handler_errors.*
              source_labels:
              - __name__
            - action: drop
              regex: otelcol_processor_batch_.*
              source_labels:
              - __name__
            scrape_interval: 10s
            static_configs:
            - targets:
              - localhost:8889
      zipkin:
        endpoint: 0.0.0.0:9411
    service:
      extensions:
      - health_check
      - headers_setter
      - k8s_observer
      - zpages
      pipelines:
        logs/entities:
          exporters:
          - otlphttp/entities
          processors:
          - memory_limiter
          - batch
          - resourcedetection
          - resource
          receivers:
          - nop
        metrics/agent:
          exporters:
          - signalfx
          processors:
          - memory_limiter
          - batch
          - resource/add_agent_k8s
          - resourcedetection
          - resource
          - resource/add_mode
          receivers:
          - prometheus/agent
        metrics/histograms:
          exporters:
          - signalfx/histograms
          processors:
          - memory_limiter
          - batch
          - resource/add_agent_k8s
          - resourcedetection
          - resource
          receivers:
          - receiver_creator
        traces:
          exporters:
          - otlp
          processors:
          - memory_limiter
          - probabilistic_sampler
          - k8sattributes
          - batch
          - resource
          - resourcedetection
          receivers:
          - otlp
          - jaeger
          - zipkin
      telemetry:
        metrics:
          readers:
          - pull:
              exporter:
                prometheus:
                  host: localhost
                  port: 8889
                  without_scope_info: true
                  without_type_suffix: true
                  without_units: true
        resource:
          service.name: otel-agent
