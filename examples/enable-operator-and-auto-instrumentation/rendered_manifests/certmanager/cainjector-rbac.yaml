---
# Source: splunk-otel-collector/charts/certmanager/templates/cainjector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: default-certmanager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: default
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.11.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "create", "update", "patch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["apiregistration.k8s.io"]
    resources: ["apiservices"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch", "update"]
---
# Source: splunk-otel-collector/charts/certmanager/templates/cainjector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default-certmanager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: default
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.11.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-certmanager-cainjector
subjects:
  - name: default-certmanager-cainjector
    namespace: default
    kind: ServiceAccount
---
# Source: splunk-otel-collector/charts/certmanager/templates/cainjector-rbac.yaml
# leader election rules
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: default-certmanager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: default
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.11.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
rules:
  # Used for leader election by the controller
  # cert-manager-cainjector-leader-election is used by the CertificateBased injector controller
  #   see cmd/cainjector/start.go#L113
  # cert-manager-cainjector-leader-election-core is used by the SecretBased injector controller
  #   see cmd/cainjector/start.go#L137
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    resourceNames: ["cert-manager-cainjector-leader-election", "cert-manager-cainjector-leader-election-core"]
    verbs: ["get", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create"]
---
# Source: splunk-otel-collector/charts/certmanager/templates/cainjector-rbac.yaml
# grant cert-manager permission to manage the leaderelection configmap in the
# leader election namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-certmanager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: default
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.11.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: certmanager-v1.11.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: default-certmanager-cainjector:leaderelection
subjects:
  - kind: ServiceAccount
    name: default-certmanager-cainjector
    namespace: default
