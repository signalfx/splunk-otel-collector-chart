---
# Source: splunk-otel-collector/templates/secret-splunk-validation-hook.yaml
# Helm hook validating that custom secret provided by user has all the required
# fields.
apiVersion: v1
kind: Pod
metadata:
  name: default-splunk-otel-collector-validate-secret
  namespace: default
  labels:
    app.kubernetes.io/name: splunk-otel-collector
    helm.sh/chart: splunk-otel-collector-0.110.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: default
    app.kubernetes.io/version: "0.110.0"
  annotations:
    "helm.sh/hook": pre-upgrade,pre-install
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  restartPolicy: Never
  containers:
  - name: validate-secret
    image: quay.io/signalfx/splunk-otel-collector:0.110.0
    imagePullPolicy: IfNotPresent
    command: ["sh", "-c"]
    args:
      - if [ "true" = "true" ] && [ ! -f /otel/secret/splunk_observability_access_token ]; then
          echo Splunk Observability destination is enabled, but custom\
          Kubernetes secret \"splunk-otel-collector\"\
          doesn\'t have required field \"splunk_observability_access_token\".;
          export TOKEN_INVALID=true;
        fi;
        if [ "false" = "true" ] && [ ! -f /otel/secret/splunk_platform_hec_token ]; then
          echo Splunk Platform destination is enabled, but custom Kubernetes\
          secret \"splunk-otel-collector\" doesn\'t\
          have required field \"splunk_platform_hec_token\".;
          export TOKEN_INVALID=true;
        fi;
        if [ "$TOKEN_INVALID" = "true" ]; then
          echo Please update the secret.;
          exit 1;
        fi
    volumeMounts:
      - name: secret
        mountPath: /otel/secret
        readOnly: true
  volumes:
    - name: secret
      secret:
        secretName: splunk-otel-collector
