################################################################################
# Config for the otel-collector k8s cluster receiver deployment.
# The values can be overridden in .Values.otelK8sClusterReceiver.config
################################################################################

extensions:
  health_check: {}

receivers:
  # Prometheus receiver scraping the pod itself
  prometheus:
    config:
      scrape_configs:
      - job_name: 'otel-k8s-cluster-receiver'
        scrape_interval: 10s
        static_configs:
        - targets: ["${K8S_POD_IP}:8888"]
  k8s_cluster:
    auth_type: serviceAccount
    metadata_exporters: [signalfx]

processors:
  queued_retry: {}

  # memory limiter is enabled by default.
  memory_limiter:
    # check_interval is the time between measurements of memory usage.
    check_interval: 5s

    # If left empty, the limit_mib value will be set to 80% of "agent.resources.limits.memory" by default
    limit_mib:

    # If left empty, the value spike_limit_mib will be set to 25% of "agent.resources.limits.memory" by default
    spike_limit_mib:

    # If left empty, the value ballast_size_mib will be set to 40% of "agent.resources.limits.memory" by default
    ballast_size_mib:

  # k8s_tagger to enrich its own metrics
  k8s_tagger:
    filter:
      node_from_env_var: K8S_NODE_NAME
      labels:
        key: component
        op: equals
        value: otel-k8s-cluster-receiver
  resource/add_cluster_name:
    attributes: []
    # This item will be added in templates to set k8s.cluster.name 
    # resource attribute based on clusterName value
    # - action: upsert
    #   value: {{ .Values.clusterName }}
    #   key: k8s.cluster.name

exporters:
  signalfx:
    # Will be set to {{ .Values.signalfx.ingestUrl }}/v2/datapoint by default
    ingest_url:
    # Will be set to https://{{ .Values.signalfx.apiUrl }} by default
    api_url:
    # Will be set to {{ .Values.signalfx.accessToken }}
    access_token:
    send_compatible_metrics: true
    timeout: 10s

service:
  extensions: [health_check]
  pipelines:
    # default metrics pipeline
    metrics:
      receivers: [prometheus, k8s_cluster]
      processors: [memory_limiter, k8s_tagger, resource/add_cluster_name, queued_retry]
      exporters: [signalfx]
