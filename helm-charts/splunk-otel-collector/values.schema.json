{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "required": [
    "clusterName",
    "cloudProvider",
    "distribution"
  ],
  "title": "Values",
  "additionalProperties": false,
  "properties": {
    "global": {
      "type": "object"
    },
    "nameOverride": {
      "description": "Override name of the chart used in Kubernetes object names.",
      "type": "string"
    },
    "fullnameOverride": {
      "description": "Override fully qualified app name.",
      "type": "string"
    },
    "clusterName": {
      "description": "Cluster name that will be used as metadata attributes for all telemetry data",
      "type": "string",
      "minLength": 1
    },
    "splunkPlatform": {
      "description": "Splunk Data-to-Everything Platform configuration",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "endpoint": {
          "description": "Splunk Platform Endpoint",
          "example": "http://localhost:8088/services/collector",
          "type": "string"
        },
        "token": {
          "description": "Splunk Platform HEC Token",
          "type": "string"
        },
        "index": {
          "description": "Name of Splunk index targeted.",
          "type": "string"
        },
        "metricsIndex": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "sourcetype": {
          "type": "string"
        },
        "maxConnections": {
          "type": "integer"
        },
        "disableCompression": {
          "type": "boolean"
        },
        "timeout": {
          "type": "string"
        },
        "insecureSkipVerify": {
          "type": "boolean"
        },
        "clientCert": {
          "type": "string"
        },
        "clientKey": {
          "type": "string"
        },
        "caFile": {
          "type": "string"
        },
        "logsEnabled": {
          "description": "Send Logs to Splunk Platform",
          "type": "boolean"
        },
        "metricsEnabled": {
          "description": "Send Metrics to Splunk Platform",
          "type": "boolean"
        },
        "fieldNameConvention": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "renameFieldsSck": {
              "type": "boolean"
            },
            "keepOtelConvention": {
              "type": "boolean"
            }
          }
        }
      },
      "anyOf": [
        {
          "properties": {
            "logsEnabled": {
              "const": true
            }
          }
        },
        {
          "properties": {
            "metricsEnabled": {
              "const": true
            }
          }
        }
      ]
    },
    "splunkObservability": {
      "description": "Splunk Observability configuration",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "realm": {
          "description": "Splunk Observability Realm",
          "example": "us0",
          "type": "string"
        },
        "accessToken": {
          "description": "Splunk Observability Access Token",
          "type": "string"
        },
        "ingestUrl": {
          "type": "string"
        },
        "apiUrl": {
          "type": "string"
        },
        "metricsEnabled": {
          "description": "Send Metrics to Splunk Observability",
          "type": "boolean"
        },
        "tracesEnabled": {
          "description": "Send Traces to Splunk Observability",
          "type": "boolean"
        },
        "logsEnabled": {
          "description": "Send Logs to Splunk Observability",
          "type": "boolean"
        },
        "profilingEnabled": {
          "description": "Whether profiling data is enabled for Splunk Observability",
          "type": "boolean"
        }
      },
      "anyOf": [
        {
          "properties": {
            "metricsEnabled": {
              "const": true
            }
          }
        },
        {
          "properties": {
            "tracesEnabled": {
              "const": true
            }
          }
        },
        {
          "properties": {
            "logsEnabled": {
              "const": true
            }
          }
        }
      ]
    },
    "logsEngine": {
      "description": "Logs collection engine",
      "type": "string",
      "enum": [
        "fluentd",
        "otel"
      ]
    },
    "cloudProvider": {
      "description": "Cloud provider where the collector is running",
      "type": "string",
      "enum": [
        "aws",
        "gcp",
        "azure",
        " ",
        ""
      ]
    },
    "provider": {
      "description": "[DEPRECATED] Cloud provider where the collector is running",
      "type": "string",
      "deprecated": true
    },
    "distribution": {
      "description": "Kubernetes distribution where the collector is running",
      "type": "string",
      "enum": [
        "eks",
        "eks/fargate",
        "gke",
        "gke/autopilot",
        "aks",
        "openshift",
        " ",
        ""
      ]
    },
    "distro": {
      "description": "[DEPRECATED] Kubernetes distribution where the collector is running",
      "type": "string",
      "deprecated": true
    },
    "environment": {
      "description": "Parameter that will be added to all the telemetry data (traces/logs/metrics) as an attribute.",
      "type": "string"
    },
    "autodetect": {
      "description": "Automatic detection of additional metric sources.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "controlPlane": {
          "type": "boolean",
          "deprecated": true
        },
        "prometheus": {
          "type": "boolean"
        },
        "istio": {
          "type": "boolean"
        }
      }
    },
    "extraAttributes": {
      "description": "Additional metadata that will be added to all the telemetry as extra attributes.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "podLabels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fromLabels": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "fromAnnotations": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "custom": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "value"
            ],
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "agent": {
      "description": "Splunk OpenTelemetry Collector agent configuration.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "controlPlaneEnabled": {
          "type": "boolean",
          "deprecated": true
        },
        "controlPlaneMetrics": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "apiserver": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              }
            },
            "controllerManager": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              }
            },
            "coredns": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              }
            },
            "etcd": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "secret": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "create": {
                      "type": "boolean"
                    },
                    "clientCert": {
                      "type": "string"
                    },
                    "clientKey": {
                      "type": "string"
                    },
                    "caFile": {
                      "type": "string"
                    }
                  }
                },
                "skipVerify": {
                  "type": "boolean"
                }
              },
              "allOf": [
                {
                  "if": {
                    "$comment": "if etcd metrics are enabled",
                    "properties": {
                      "enabled": {
                        "const": true
                      }
                    }
                  },
                  "then": {
                    "if": {
                      "$comment": "if the helm chart will create the etcd k8s secret",
                      "properties": {
                        "secret": {
                          "properties": {
                            "create": {
                              "const": true
                            }
                          }
                        }
                      }
                    },
                    "then": {
                      "$comment": "then require a clientCert and clientKey that are not empty strings",
                      "properties": {
                        "secret": {
                          "properties": {
                            "clientCert": {
                              "minLength": 1
                            },
                            "clientKey": {
                              "minLength": 1
                            }
                          }
                        }
                      }
                    },
                    "else": {
                      "$comment": "then require a k8s secret name for a secret the user created that is not an empty string",
                      "properties": {
                        "secret": {
                          "properties": {
                            "name": {
                              "minLength": 1
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "proxy": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              }
            },
            "scheduler": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "ports": {
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "containerPort": {
                  "type": "integer"
                },
                "hostPort": {
                  "type": "integer"
                },
                "protocol": {
                  "type": "string"
                },
                "enabled_for": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "traces",
                      "metrics",
                      "logs",
                      "profiling"
                    ]
                  }
                }
              }
            }
          }
        },
        "resources": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "limits": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "cpu": {
                  "type": [
                    "string",
                    "integer"
                  ]
                },
                "memory": {
                  "type": "string"
                }
              }
            },
            "requests": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "cpu": {
                  "type": [
                    "string",
                    "integer"
                  ]
                },
                "memory": {
                  "type": "string"
                }
              }
            }
          }
        },
        "securityContext": {
          "type": "object"
        },
	      "maxUnavailable": {
	        "oneOf": [
	          {
	            "type": "string"
            },
            {
	            "type": "integer"
	          }
	        ]
	      },
        "annotations": {
          "type": "object"
        },
        "podAnnotations": {
          "type": "object"
        },
        "podLabels": {
          "type": "object"
        },
        "extraEnvs": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "extraVolumes": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "extraVolumeMounts": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "featureGates": {
          "type": "string"
        },
        "config": {
          "type": "object"
        }
      }
    },
    "otelAgent": {
      "description": "[DEPRECATED] Splunk OpenTelemetry Collector agent configuration.",
      "type": "object",
      "deprecated": true
    },
    "clusterReceiver": {
      "description": "Splunk OpenTelemetry Collector cluster receiver configuration.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "resources": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "limits": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "cpu": {
                  "type": [
                    "string",
                    "integer"
                  ]
                },
                "memory": {
                  "type": "string"
                }
              }
            },
            "requests": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "cpu": {
                  "type": [
                    "string",
                    "integer"
                  ]
                },
                "memory": {
                  "type": "string"
                }
              }
            }
          }
        },
        "nodeSelector": {
          "type": "object"
        },
        "tolerations": {
          "type": "array"
        },
        "affinity": {
          "type": "object"
        },
        "securityContext": {
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "type": "integer"
        },
        "priorityClassName": {
          "type": "string"
        },
        "annotations": {
          "type": "object"
        },
        "podAnnotations": {
          "type": "object"
        },
        "k8sEventsEnabled": {
          "type": "boolean"
        },
        "podLabels": {
          "type": "object"
        },
        "extraEnvs": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "extraVolumes": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "extraVolumeMounts": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "featureGates": {
          "type": "string"
        },
        "config": {
          "type": "object"
        }
      }
    },
    "otelK8sClusterReceiver": {
      "description": "[DEPRECATED] Splunk OpenTelemetry Collector cluster receiver configuration.",
      "type": "object",
      "deprecated": true
    },
    "logsCollection": {
      "description": "Native OpenTelemetry logs collection configuration.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "containers": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "containerRuntime": {
              "type": "string"
            },
            "excludePaths": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "excludeAgentLogs": {
              "type": "boolean"
            },
            "extraOperators": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "useSplunkIncludeAnnotation": {
              "type": "boolean"
            },
            "multilineConfigs": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        },
        "journald": {
          "description": "Configuration to collect journald logs",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "directory": {
              "type": "string"
            },
            "index": {
              "type": "string"
            },
            "units": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "priority": {
                    "type": [
                      "string",
                      "integer"
                    ]
                  }
                }
              }
            }
          }
        },
        "checkpointPath": {
          "type": "string"
        },
        "extraFileLogs": {
          "type": "object"
        }
      }
    },
    "fluentd": {
      "description": "Fluentd sidecar configuration for logs collection.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "resources": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "limits": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "cpu": {
                  "type": [
                    "string",
                    "integer"
                  ]
                },
                "memory": {
                  "type": "string"
                }
              }
            },
            "requests": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "cpu": {
                  "type": [
                    "string",
                    "integer"
                  ]
                },
                "memory": {
                  "type": "string"
                }
              }
            }
          }
        },
        "securityContext": {
          "type": "object"
        },
        "extraEnvs": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "config": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "containers": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "path": {
                  "type": "string"
                },
                "pathDest": {
                  "type": "string"
                },
                "logFormatType": {
                  "type": "string"
                },
                "criTimeFormat": {
                  "type": "string"
                }
              }
            },
            "journalLogPath": {
              "type": "string"
            },
            "buffer": {
              "type": "object"
            },
            "logLevel": {
              "type": "string",
              "enum": [
                "trace",
                "debug",
                "info",
                "warn",
                "error"
              ]
            },
            "path": {
              "type": "string"
            },
            "excludePath": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "posFilePrefix": {
              "type": "string"
            },
            "customFilters": {
              "type": "object",
              "patternProperties": {
                ".*": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "tag": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "logs": {
              "type": "object",
              "patternProperties": {
                ".*": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "from": {
                      "type": "object"
                    },
                    "timestampExtraction": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "regexp": {
                          "type": "string"
                        },
                        "format": {
                          "type": "string"
                        }
                      }
                    },
                    "multiline": {
                      "type": "object",
                      "additionalItems": false,
                      "properties": {
                        "firstline": {
                          "type": "string"
                        },
                        "flushInterval": {
                          "type": "string"
                        }
                      }
                    },
                    "sourcetype": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "image": {
      "description": "Docker image configuration.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fluentd": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "repository": {
              "type": "string"
            },
            "tag": {
              "type": "string"
            },
            "pullPolicy": {
              "type": "string",
              "enum": [
                "IfNotPresent",
                "Always",
                "Never"
              ]
            },
            "initContainer": {
              "type": "object",
              "deprecated": "true"
            }
          }
        },
        "otelcol": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "repository": {
              "type": "string"
            },
            "tag": {
              "type": "string"
            },
            "pullPolicy": {
              "type": "string",
              "enum": [
                "IfNotPresent",
                "Always",
                "Never"
              ]
            }
          }
        }
      }
    },
    "podDisruptionBudget": {
      "description": "Limits number of pods may be unavailable due to voluntary disruptions.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "minAvailable": {
          "type": [
            "integer",
            "string"
          ]
        },
        "maxUnavailable": {
          "type": [
            "integer",
            "string"
          ]
        }
      }
    },
    "serviceAccount": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "create": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "annotations": {
          "type": "object"
        }
      }
    },
    "rbac": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "create": {
          "type": "boolean"
        },
        "customRules": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "secret": {
      "description": "Kubernetes secret resource configuration",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "create": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "validateSecret": {
          "type": "boolean"
        }
      }
    },
    "tolerations": {
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "nodeSelector": {
      "type": "object"
    },
    "terminationGracePeriodSeconds": {
      "type": "integer"
    },
    "affinity": {
      "description": "Defines node affinity to restrict deployment of the o11y collector daemonset.",
      "type": "object"
    },
    "priorityClassName": {
      "type": "string"
    },
    "readinessProbe": {
      "type": "object"
    },
    "livenessProbe": {
      "type": "object"
    },
    "isWindows": {
      "description": "Apply for k8s cluster with windows worker node.",
      "type": "boolean"
    },
    "gateway": {
      "description": "Splunk OpenTelemetry Collector gateway deployment configuration.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "replicaCount": {
          "type": "integer"
        },
        "ports": {
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "containerPort": {
                  "type": "integer"
                },
                "hostPort": {
                  "type": "integer"
                },
                "protocol": {
                  "type": "string"
                },
                "enabled_for": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "traces",
                      "metrics",
                      "logs",
                      "profiling"
                    ]
                  }
                }
              }
            }
          }
        },
        "resources": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "limits": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "cpu": {
                  "type": [
                    "string",
                    "integer"
                  ]
                },
                "memory": {
                  "type": "string"
                }
              }
            },
            "requests": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "cpu": {
                  "type": [
                    "string",
                    "integer"
                  ]
                },
                "memory": {
                  "type": "string"
                }
              }
            }
          }
        },
        "nodeSelector": {
          "type": "object"
        },
        "tolerations": {
          "type": "array"
        },
        "affinity": {
          "type": "object"
        },
        "securityContext": {
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "type": "integer"
        },
        "priorityClassName": {
          "type": "string"
        },
        "annotations": {
          "type": "object"
        },
        "podAnnotations": {
          "type": "object"
        },
        "podLabels": {
          "type": "object"
        },
        "extraEnvs": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "extraVolumes": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "extraVolumeMounts": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "featureGates": {
          "type": "string"
        },
        "config": {
          "type": "object"
        }
      }
    },
    "otelCollector": {
      "description": "[DEPRECATED] Splunk OpenTelemetry Collector gateway deployment configuration.",
      "type": "object",
      "deprecated": true
    },
    "service": {
      "description": "Splunk OpenTelemetry collector service configuration.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ClusterIP",
            "NodePort",
            "LoadBalancer",
            "ExternalName"
          ]
        },
        "annotations": {
          "type": "object"
        }
      }
    },
    "splunkRealm": {
      "description": "[DEPRECATED] Splunk Observability Realm",
      "type": "string",
      "deprecated": true
    },
    "splunkAccessToken": {
      "description": "[DEPRECATED] Splunk Observability Access Token",
      "type": "string",
      "deprecated": true
    },
    "ingestUrl": {
      "description": "[DEPRECATED] Splunk Observability ingest URL.",
      "type": "string",
      "deprecated": true
    },
    "apiUrl": {
      "description": "[DEPRECATED] Splunk Observability API URL.",
      "type": "string",
      "deprecated": true
    },
    "metricsEnabled": {
      "description": "[DEPRECATED] Send Metrics to Splunk Observability",
      "type": "boolean",
      "deprecated": true
    },
    "tracesEnabled": {
      "description": "[DEPRECATED] Send Traces to Splunk Observability",
      "type": "boolean",
      "deprecated": true
    },
    "logsEnabled": {
      "description": "[DEPRECATED] Send Logs to Splunk Observability",
      "type": "boolean",
      "deprecated": true
    }
  },
  "allOf": [
    {
      "anyOf": [
        {
          "properties": {
            "splunkPlatform": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "minLength": 1
                }
              }
            }
          }
        },
        {
          "properties": {
            "splunkObservability": {
              "type": "object",
              "properties": {
                "realm": {
                  "minLength": 1
                }
              }
            }
          }
        },
        {
          "properties": {
            "splunkRealm": {
              "description": "[DEPRECATED] Splunk Observability Realm",
              "type": "string",
              "deprecated": true,
              "minLength": 1
            }
          }
        }
      ]
    },
    {
      "if": {
        "$comment": "if k8s secret resource created by the chart (default behavior)",
        "properties": {
          "secret": {
            "properties": {
              "create": {
                "const": true
              }
            }
          }
        }
      },
      "then": {
        "$comment": "then require tokens to be provided for every enabled destination",
        "properties": {
          "splunkObservability": {
            "if": {
              "properties": {
                "realm": {
                  "minLength": 1
                }
              }
            },
            "then": {
              "properties": {
                "accessToken": {
                  "minLength": 1
                }
              }
            }
          },
          "splunkPlatform": {
            "if": {
              "properties": {
                "endpoint": {
                  "minLength": 1
                }
              }
            },
            "then": {
              "properties": {
                "token": {
                  "minLength": 1
                }
              }
            }
          }
        }
      }
    },
    {
      "if": {
        "$comment": "if splunkPlatform.metricsEnabled is true and splunkPlatform.endpoint is provided",
        "properties": {
          "splunkPlatform": {
            "properties": {
              "endpoint": {
                "minLength": 1
              }
            }
          }
        }
      },
      "then": {
        "$comment": "then splunkPlatform.metricsIndex must be provided",
        "properties": {
          "splunkPlatform": {
            "if": {
              "properties": {
                "metricsEnabled": {
                  "const": true
                }
              }
            },
            "then": {
              "properties": {
                "metricsIndex": {
                  "minLength": 1
                }
              }
            }
          }
        }
      }
    },
    {
      "if": {
        "$comment": "if splunkPlatform.logsEnabled is true and splunkPlatform.endpoint is provided",
        "properties": {
          "splunkPlatform": {
            "properties": {
              "endpoint": {
                "minLength": 1
              }
            }
          }
        }
      },
      "then": {
        "$comment": "then splunkPlatform.index must be provided",
        "properties": {
          "splunkPlatform": {
            "if": {
              "properties": {
                "logsEnabled": {
                  "const": true
                }
              }
            },
            "then": {
              "properties": {
                "index": {
                  "minLength": 1
                }
              }
            }
          }
        }
      }
    }
  ]
}
