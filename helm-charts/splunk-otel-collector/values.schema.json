{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "required": [
    "clusterName",
    "provider",
    "distro"
  ],
  "title": "Values",
  "properties": {
    "clusterName": {
      "description": "Cluster name that will be used as metadata attributes for all telemetry data",
      "type": "string"
    },
    "provider": {
      "description": "Cloud provider where the collector is running",
      "type": "string",
      "enum": ["aws", "gcp", "azure", " ", ""]
    },
    "distro": {
      "description": "Kubernetes distribution where the collector is running",
      "type": "string",
      "enum": ["eks", "gke", "aks", "openshift", " ", ""]
    },
    "splunkPlatform": {
      "description": "Splunk Data-to-Everything Platform configuration",
      "type": "object",
      "properties": {
        "endpoint": {
          "description": "Splunk Platform Endpoint",
          "example": "http://localhost:8088/services/collector",
          "type": "string"
        },
        "token": {
          "description": "Splunk Platform HEC Token",
          "type": "string"
        },
        "logsEnabled": {
          "description": "Send Logs to Splunk Platform",
          "type": "boolean"
        },
        "metricsEnabled": {
          "description": "Send Metrics to Splunk Platform",
          "type": "boolean"
        }
      },
      "anyOf": [
        {
          "properties": {
            "logsEnabled": {
              "const": true
            }
          }
        },
        {
          "properties": {
            "metricsEnabled": {
              "const": true
            }
          }
        }
      ]
    },
    "splunkObservability": {
      "description": "Splunk Observability configuration",
      "type": "object",
      "properties": {
        "realm": {
          "description": "Splunk Observability Realm",
          "example": "us0",
          "type": "string"
        },
        "accessToken": {
          "description": "Splunk Observability Access Token",
          "type": "string"
        },
        "ingestUrl": {
          "type": "string"
        },
        "apiUrl": {
          "type": "string"
        },
        "metricsEnabled": {
          "description": "Send Metrics to Splunk Observability",
          "type": "boolean"
        },
        "tracesEnabled": {
          "description": "Send Traces to Splunk Observability",
          "type": "boolean"
        },
        "logsEnabled": {
          "description": "Send Logs to Splunk Observability",
          "type": "boolean"
        }
      },
      "anyOf": [
        {
          "properties": {
            "metricsEnabled": {
              "const": true
            }
          }
        },
        {
          "properties": {
            "tracesEnabled": {
              "const": true
            }
          }
        },
        {
          "properties": {
            "logsEnabled": {
              "const": true
            }
          }
        }
      ]
    },
    "secret": {
      "description": "Kubernetes secret resource configuration",
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    }
  },
  "anyOf": [
    {
      "properties": {
        "splunkPlatform": {
          "type": "object",
          "properties": {
            "endpoint": {
              "minLength": 1
            }
          }
        }
      }
    },
    {
      "properties": {
        "splunkObservability": {
          "type": "object",
          "properties": {
            "realm": {
              "minLength": 1
            }
          }
        }
      }
    },
    {
      "properties": {
        "splunkRealm": {
          "description": "[DEPRECATED] Splunk Observability Realm",
          "type": "string",
          "deprecated": true,
          "minLength": 1
        }
      }
    }
  ],
  "if": {
    "$comment": "if k8s secret resource created by the chart (default behavior)",
    "properties": {
      "secret": {
        "properties": {
          "create": {
            "const": true
          }
        }
      }
    }
  },
  "then": {
    "$comment": "then require tokens to be provided for every enabled destination",
    "properties": {
      "splunkObservability": {
        "if": {
          "properties": {
            "realm": {
              "minLength": 1
            }
          }
        },
        "then": {
          "properties": {
            "accessToken": {
              "minLength": 1
            }
          }
        }
      },
      "splunkPlatform": {
        "if": {
          "properties": {
            "endpoint": {
              "minLength": 1
            }
          }
        },
        "then": {
          "properties": {
            "token": {
              "minLength": 1
            }
          }
        }
      }
    }
  }
}
